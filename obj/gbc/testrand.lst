                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module testrand
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _waitpad
                                     13 	.globl _arand
                                     14 	.globl _initarand
                                     15 	.globl _rand
                                     16 	.globl _puts
                                     17 	.globl _printf
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;src/testrand.c:8: void main(void)
                                     50 ;	---------------------------------
                                     51 ; Function main
                                     52 ; ---------------------------------
      000000                         53 _main::
                                     54 ;src/testrand.c:10: while(TRUE) {
      000000                         55 00103$:
                                     56 ;src/testrand.c:15: puts("press A on the GameBoy...");
      000000 11r40r00                57 	ld	de, #___str_0
      000003 D5                      58 	push	de
      000004 CDr00r00                59 	call	_puts
      000007 E1                      60 	pop	hl
                                     61 ;src/testrand.c:22: waitpad(J_A);
      000008 3E 10                   62 	ld	a, #0x10
      00000A F5                      63 	push	af
      00000B 33                      64 	inc	sp
      00000C CDr00r00                65 	call	_waitpad
      00000F 33                      66 	inc	sp
                                     67 ;src/testrand.c:23: initarand(sys_time);
      000010 21r00r00                68 	ld	hl, #_sys_time
      000013 2A                      69 	ld	a, (hl+)
      000014 5F                      70 	ld	e, a
      000015 56                      71 	ld	d, (hl)
      000016 D5                      72 	push	de
      000017 CDr00r00                73 	call	_initarand
      00001A E1                      74 	pop	hl
                                     75 ;src/testrand.c:24: for (uint8_t i = 0; i != 16; i++) 
      00001B 0E 00                   76 	ld	c, #0x00
      00001D                         77 00106$:
      00001D 79                      78 	ld	a, c
      00001E D6 10                   79 	sub	a, #0x10
      000020 28 DE                   80 	jr	Z, 00103$
                                     81 ;src/testrand.c:25: printf("rand=%hx arand=%hx\n", (uint8_t)rand(), (uint8_t)arand());
      000022 C5                      82 	push	bc
      000023 CDr00r00                83 	call	_arand
      000026 C1                      84 	pop	bc
      000027 43                      85 	ld	b, e
      000028 C5                      86 	push	bc
      000029 CDr00r00                87 	call	_rand
      00002C 7B                      88 	ld	a, e
      00002D C1                      89 	pop	bc
      00002E C5                      90 	push	bc
      00002F C5                      91 	push	bc
      000030 33                      92 	inc	sp
      000031 F5                      93 	push	af
      000032 33                      94 	inc	sp
      000033 11r5Ar00                95 	ld	de, #___str_1
      000036 D5                      96 	push	de
      000037 CDr00r00                97 	call	_printf
      00003A E8 04                   98 	add	sp, #4
      00003C C1                      99 	pop	bc
                                    100 ;src/testrand.c:24: for (uint8_t i = 0; i != 16; i++) 
      00003D 0C                     101 	inc	c
                                    102 ;src/testrand.c:27: }
      00003E 18 DD                  103 	jr	00106$
      000040                        104 ___str_0:
      000040 70 72 65 73 73 20 41   105 	.ascii "press A on the GameBoy..."
             20 6F 6E 20 74 68 65
             20 47 61 6D 65 42 6F
             79 2E 2E 2E
      000059 00                     106 	.db 0x00
      00005A                        107 ___str_1:
      00005A 72 61 6E 64 3D 25 68   108 	.ascii "rand=%hx arand=%hx"
             78 20 61 72 61 6E 64
             3D 25 68 78
      00006C 0A                     109 	.db 0x0a
      00006D 00                     110 	.db 0x00
                                    111 	.area _CODE
                                    112 	.area _INITIALIZER
                                    113 	.area _CABS (ABS)
